#### AMAZON WEB SCRAPER ####
# It is project which i used to track the price of particular
# product in this case tagg bluetooth earphones and send me a an email (SMTP)
# price drops below a certain required budget whic i have
# ;)


#Beautiful Soup 
# is a Python library for pulling data out of 
# HTML and XML files. It works with your favorite parser 
# to provide idiomatic ways of navigating, searching, and 
# modifying the parse tree
from bs4 import BeautifulSoup

# request library used to make request to make http requests 
# Its just a simple api for hiding complexities in making requests
import requests

import smtplib

import time

# *******************Put your own choice of product********
URL  = 'https://www.amazon.in/Inferno-Wireless-Bluetooth-Earphone-Carry/dp/B01M9DROES/ref=sr_1_3?crid=VGUD1PFYY1X3&keywords=tagg+earphone&qid=1562612912&s=gateway&sprefix=tag+ear%2Caps%2C418&sr=8-3'

# headers basically gives some info about our browser
headers = {"User-Agent":'Each bit of your user agent indicates something particular about your system.'}
def check_price():
    # Now lets a make a call to the page using get method
    # this returne all the data from that page
    page = requests.get(URL, headers=headers)

    # this takes all the data from the page contebt and parse the
    # html data so that we can pull individual data from the page
    soup = BeautifulSoup(page.content, 'html.parser')

    # uncomment the below print to see clearly that it pulls all data
    #print(soup.prettify())

    # pulling out the span with the req id

    # product title 
    # findAll for class and find for id
    title =  soup.find(id='productTitle').get_text().strip() 
    price = soup.find(id="priceblock_saleprice").get_text()

    # **Note: since soup.find returns string data hence convert
    # to float to compare 
    converted_price = ''
    # remove rupee sign and , since we have covert it float
    for num in price:
        if num in ('1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'):
            converted_price += num

    converted_price = float(converted_price)

    print(title.strip())
    print(converted_price)

    # Now our logic to send a mail notification
    if converted_price < 2000:
        send_mail()

# function to send email SMT protocol

def send_mail():
    # first we enable smtp server
    server = smtplib.SMTP('smtp.gmail.com', 587)
    
    # an ehlo is hello for a server to identify 
    # when it gets connected to other email server 
    # to establish connection
    server.ehlo()
    server.starttls()
    server.ehlo()

    # app password generated by 2 way authentication
    # *******put your own password and email here******
    server.login('rohit@gmail.com', 'gqlrxl')

    # now we write the subject and body for our email

    subject = 'Hey!! Price fell down!!'
    body = 'Check the amazon link https://www.amazon.in/Inferno-Wireless-Bluetooth-Earphone-Carry/dp/B01M9DROES/ref=sr_1_3?crid=VGUD1PFYY1X3&keywords=tagg+earphone&qid=1562612912&s=gateway&sprefix=tag+ear%2Caps%2C418&sr=8-3'

    #format string in python
    msg = f"Subject:{subject}\n\n{body}"
    
    #write 'from' then 'to' and then 'msg' in sendmail args
    server.sendmail(
        'rohit@gmail.com',
        'abcd@gmail.com',
        msg    
    )

    print('Hey Email has been sent !!')
    server.quit()


# to run the price function for a particular times each day
# in this case it checks once times each day

while True:
    check_price()
    time.sleep(60*60*24)


